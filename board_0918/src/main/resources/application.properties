spring.application.name=study

server.port=8080

# MySQL 연결 설정
#spring.datasource.url=jdbc:mysql://localhost:3306/myschema?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=1q2w3e
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#우분터 서버
spring.datasource.url=jdbc:mysql://172.18.160.1:3306/myschema?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=mytest
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# MyBatis 설정 (패키지 경로 정확히 일치)
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
logging.level.java.sql=DEBUG

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB


# JPA 기본
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# 스키마 자동 생성 전략(교육용으로는 update가 편함; 운영은 none 권장)

spring.jpa.hibernate.ddl-auto=update
#아래 옵션중 하나 들어감.
#none: 아무 것도 안 함 (운영 기본)
#validate: 엔티티와 DB 스키마 일치 여부만 검사, 불일치면 에러
#update: 가능한 범위에서 스키마 갱신
#create: 매 기동마다 드랍 후 생성
#create-drop: 기동 시 생성, 종료 시 드랍(테스트용)